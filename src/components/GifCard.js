
import React from 'react';

class GifCard extends React.Component {
  constructor(props) {
    super(props);

    // creating a reference
    this.imageRef = React.createRef();
  }

  componentDidMount() {//only gets called after this thing gets rendered we are going to console log that entire dom node
    //.. that entire image we are essentually reaching into the dom to get it through that ref system

    // any time that an image successfully loads up or download an image from the
    //.. internet and displays it on the screen it emits this load event. So
    //.. once it emits this load event that means now we successfully downloaded the image it
    //.. is being displayed on the screen so now we can go ahead and get the actual height of the image
    this.imageRef.current.addEventListener('load', this.setSpans)
   // this.imageRef.current.clientHeight
  }
     setSpans = () => {
       console.log(this.imageRef.current.clientHeight)
     }



  /*passing a new prop to this img tag*/
  /*It will tell us a little bit about this
  dom node(img)*/
  /*img jsx tag will eventually
    be turned into a dom element */
  /*  ref system is how we some how get
    a handle on some paticular element
    that is generated by a tag */
    /*
    ther ref itself is a javascript object that has a current property and the
    current property references a dom node in this case the img*/
  render() {
    const { title, images } = this.props.gif;
    return (
      <div>
        <img
          height="200" width="200"
          ref={this.imageRef}
          alt={title}
          src={images.downsized.url}
        />

      </div>
    );
  }
}

// const mapStateToProps = state => {// getting this state from the store
//   return {
//     gifs: state.gifs
//   }
// }

// export default connect(mapStateToProps, {}) (GifCard);
export default GifCard;
        // <GifItem gif={this.props.gif} />
////////////////////////////////
// import React from 'react';
//
//
// const GifCard = props => {
//   // console.log(props.gif)
//   const aSingleGif = props.gif.map(({title,id, images}) => {
//     return <img alt={title} key={id} src={images.downsized.url} />
//   });
//
//  return <div>{aSingleGif}</div>;
// };
//
// export default GifCard;
